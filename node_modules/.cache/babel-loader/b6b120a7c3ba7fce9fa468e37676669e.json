{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cryra\\\\Twitter-Web3\\\\src\\\\pages\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Input } from \"web3uikit\";\nimport './Settings.css';\nimport { useState, useRef, useEffect } from \"react\";\nimport pfp1 from \"../images/pfp1.png\";\nimport pfp2 from \"../images/pfp2.png\";\nimport pfp3 from \"../images/pfp3.png\";\nimport pfp4 from \"../images/pfp4.png\";\nimport pfp5 from \"../images/pfp5.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5];\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Setting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\"\n        /* onChange={(e)=> setUsername(e.target.value)} */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"BioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\"\n        /* onChange={(e)=> setBio(e.target.value)} */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Image (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e,\n                className: selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\",\n                onClick: () => {\n                  setSelectedPFP(pfps[i]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Banner\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            onClick: onBannerClick,\n            className: \"banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            ref: inputFile,\n            onChange: changeHandler,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\"\n        /* onClick={() => saveEdits()}*/\n        ,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"BHvyH1BmQyR9B9ebBtFG1kHpB4s=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Users/cryra/Twitter-Web3/src/pages/Settings.js"],"names":["React","Link","Input","useState","useRef","useEffect","pfp1","pfp2","pfp3","pfp4","pfp5","defaultImgs","Settings","pfps","selectedPFP","setSelectedPFP","inputFile","selectedFile","setSelectedFile","onBannerClick","current","click","changeHandler","event","img","target","files","URL","createObjectURL","map","e","i","display"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Input } from \"web3uikit\";\r\nimport './Settings.css';\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport pfp1 from \"../images/pfp1.png\";\r\nimport pfp2 from \"../images/pfp2.png\";\r\nimport pfp3 from \"../images/pfp3.png\";\r\nimport pfp4 from \"../images/pfp4.png\";\r\nimport pfp5 from \"../images/pfp5.png\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\n\r\n\r\nconst Settings = () => {\r\n  \r\n  const pfps = [pfp1,pfp2,pfp3,pfp4,pfp5];\r\n  const [selectedPFP, setSelectedPFP] = useState();\r\n  const inputFile = useRef(null);\r\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\r\n\r\n  const onBannerClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const img = event.target.files[0];\r\n    setSelectedFile(URL.createObjectURL(img));\r\n  };\r\n\r\n  return (\r\n    <>\r\n    \r\n    <div className=\"pageIdentify\">Setting</div>\r\n    <div className=\"settingsPage\">\r\n      <Input\r\n        label=\"Name\"\r\n        name=\"NameChange\"\r\n        width=\"100%\"\r\n        labelBgColor=\"#141d26\"\r\n       /* onChange={(e)=> setUsername(e.target.value)} */\r\n      />\r\n\r\n      <Input\r\n        label=\"Bio\"\r\n        name=\"BioChange\"\r\n        width=\"100%\"\r\n        labelBgColor=\"#141d26\"\r\n        /* onChange={(e)=> setBio(e.target.value)} */\r\n      />\r\n\r\n      <div className=\"pfp\">\r\n          Profile Image (Your NFTs)\r\n\r\n          <div className=\"pfpOptions\">\r\n            {pfps.map((e,i) => {\r\n\r\n              return(\r\n                <>\r\n                <img\r\n                src={e}\r\n                className={\r\n                 selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"\r\n                }\r\n                onClick={() => {setSelectedPFP(pfps[i]);}}\r\n                ></img>\r\n                </>\r\n              )\r\n            })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pfp\">\r\n          Profile Banner\r\n          <div className=\"pfpOptions\">\r\n            <img\r\n              src={selectedFile}\r\n              onClick={onBannerClick}\r\n              className=\"banner\"\r\n            ></img>\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              ref={inputFile}\r\n              onChange={changeHandler}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"save\" /* onClick={() => saveEdits()}*/> \r\n          Save\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n\r\n"]},"metadata":{},"sourceType":"module"}